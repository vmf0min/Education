#include <iostream>

/// Для 1 задачи.
/// Проверка точки на границу четвертей, если хотя бы какая-то из ее координат равна нулю.
bool isCheckEdge(int x, int y) {
    if (x == 0 || y == 0) {
        std::cout << "На границе.\n";
        return true;
    }
    return false;
}

int main() {
/// Задачи 8.2 и 8.3
#pragma region Задача 1. Координатная плоскость.

    int x, y;
    std::cout << "Введите координаты X и Y: ";
    std::cin >> x >> y;

    if (x == 0 && y == 0) std::cout << "X и Y лежат в начале координат.\n";
    else if (x >= 0 && y >= 0) { // Первая четверть — если обе координаты положительны.
        if (!isCheckEdge(x, y)) std::cout << "Первая четверть.\n";
    } else if (x <= 0 && y >= 0) { // вторая — если X отрицателен, а Y положителен
        if (!isCheckEdge(x, y)) std::cout << "Вторая четверть.\n";
    } else if (x <= 0 && y <= 0) { // третья — если обе координаты отрицательны
        if (!isCheckEdge(x, y)) std::cout << "Третья четверть.\n";
    } else if (x >= 0 && y <= 0) { // четвертая — если X положителен, а Y отрицателен.
        if (!isCheckEdge(x, y)) std::cout << "Четвертая четверть.\n";
    }
    
#pragma endregion

#pragma region Задача 2. Банкомат.
/// Пользователи банкомата хотят снимать деньги. Но банкомат умеет выдавать только купюры по 100 рублей,
/// а максимальная сумма снятия — 100 000 рублей. Напишите программу, которая проверяет допустимость
/// суммы средств, введенной пользователем.
/*
    // Максимальная сумма снятия
    int maxSum = 100000;

    // Номинал купюры
    int banknote = 100;

    // Количество средст введенных пользователем для снятия
    int money;

    std::cout << "Сколько средств Вы хотите снять? ";
    std::cin >> money;

    std::cout << "\n";
    if (money > maxSum) {
        std::cout << "Недопустимая сумма, сумма выводимых средств превышает " << maxSum << "\n";
    } else if (money % banknote != 0)
        std::cout << "Недопустимая сумма, сумма выводимых средств должна быть кратна " << banknote << "\n";
    else std::cout << "Производится выдача средств...\n-------------\nВаши средства: " << money << "\n";
*/
#pragma endregion

#pragma region Задача 3. Високосный год (необязательная).
/// Напишите программу, которая определяет количество дней в году.
/// Подсказка: номер года должен делиться на 4, однако если он делится на 100, но не делится на 400,
/// то год не високосный!
/*
    int year;

    std::cout << "Проверка года на вискосность.\nВведите год: ";
    std::cin >> year;

    std::cout << (year % 400 == 0 || year % 4 == 0 && year % 100 != 0  ? "Год високосный.\n" : "Не високосный.\n");
*/
#pragma endregion

/// Задачи 8.3
#pragma region Задача 2. Мост и перегрузка.
/// Через мост разрешено проезжать машинам с массой не больше 1200 килограмм. Для контроля на каждой полосе на въезде
/// расположены весы. Одновременно на мост въезжает 4 машины.
/// Напишите программу, которая получает 4 числа — массу въезжающих машин — и сообщает, есть ли среди них хоть одна,
/// вес которой превышает 1200 килограмм.
/*
    int weight = 1200;

    int car1, car2, car3, car4;
    std::cout << "Введите массу машин через пробел: ";
    std::cin >> car1 >> car2 >> car3 >> car4;

    std::cout << (car1 >= weight || car2 >= weight || car3 >= weight || car4 >= weight
                  ? "Есть машина превышающая максимальный вес!\n" : "Все машины проходят по весу!\n");
*/
#pragma endregion

#pragma region Задача 3. Треугольник.
/// У меня есть три деревянных палочки, длины этих палочек равны A, B и C. Напишите программу, которая по данным
/// длинам определяет, можно ли из этих трех палочек сложить треугольник.
/// Подсказка: треугольник сложить нельзя, если суммарная длина каких-либо двух палочек меньше или равна длины
/// оставшейся палочки.
/*
int a, b, c;
    std::cout << "Введите длины палочек через пробел: ";
    std::cin >> a >> b >> c;

    if ((a + b) <= c || (a + c) <= b || (b + c) <= a)
        std::cout << "Нельзя построить треугольник. Сумма 2-х сторон меньше 3\n";
    else std::cout << "Можно построить треугольник.\n";
*/
#pragma endregion

#pragma region Задача 4. Совпадение чисел(необязательная).
/// Напишите программу, которая по трем введенным числам a, b, c определяет, сколько среди них совпадающих чисел.
/// Подсказка: Совпадающих может быть 0, 2 или 3. Например, если введены числа 5 1 5, то ответ должен быть
/// “2 совпадающих”, если -1 -2 -3, то ответ должен быть “0 совпадающих”.
/*
    int a, b, c, coincide = 0;

    std::cout << "Введите числа через пробел: ";
    std::cin >> a >> b >> c;

    if (a == b && b == c) coincide += 3;
    else if (a == b || a == c || b == c) coincide += 2;

    std::cout << coincide << " совпадающих.\n";
*/
#pragma endregion

/// Задачи 8.4
#pragma region Задача 1. Военкомат.
/// Для отбора летчиков устанавливаются жесткие критерии.
/// Напишите программу, проверяющую, подходит ли призывник. Его рост должен быть не меньше 145см и не больше 165см,
/// вес не меньше 45кг и не больше 65кг, а количество рук и ног должно обязательно совпадать (мы не знаем, зачем,
/// но так требует инструкция). При этом берут любого человека, налетавшего на самолетах больше 100 часов.

/// Дополнительно.
/// А еще зеленоглазых в летчики тоже не берут, поэтому проверьте и цвет их глаз.
/// Подсказка: для цвета глаз используйте строковый тип данных. Проверять строки на равенство можно так:
/// if (eyeColor == “серо-буро-малиновый”) { … }
/*
    int height;
    int weight;
    int arms, legs;
    int timeFight = 100;
    std::string eyeColor;

    std::cout << "Рост: ";
    std::cin >> height;

    std::cout << "Вес: ";
    std::cin >> weight;

    std::cout << "Руки и ноги через пробел: ";
    std::cin >> arms >> legs;

    std::cout << "Цвет глаз: ";
    std::cin >> eyeColor;

    if (height < 145 || height > 165)
        std::cout << "Не подходит по росту.\n";
    else if (weight < 45 || weight > 65)
        std::cout << "Не подходит по весу.\n";
    else if (arms != 2 || legs != 2)
        std::cout << "Не подходит по количеству рук и ног.\n";
    else if (timeFight < 100)
        std::cout << "Не подходит по времени налета.\n";
    else if (eyeColor == "зеленоглазый.")
        std::cout << "Не подходит по цвету глаз.\n";
    else std::cout << "Подходит.\n";
*/
#pragma endregion

#pragma region Задача 2. Входит... И выходит... И входит... Замечательно выходит!
/// У Винни-Пуха есть кирпич размера A на B на C. А еще есть стена, в которой проделано прямоугольное отверстие
/// размера X на Y. Прежде чем подарить все это ослику Иа, Винни-Пух хочет знать, получится ли просунуть этот кирпич
/// в это отверстие? Напишите программу, которая по данным пяти числам отвечает на этот вопрос.
/// Разумеется, кирпич можно поворачивать.
/*
    int a, b, c;
    int x, y;

    std::cout << "Введите размер кирпича, который Винни-Пух будет вставлять в стену: ";
    std::cin >> a >> b >> c;

    std::cout << "Введите размер стены: ";
    std::cin >> x >> y;

    if (a <= x || b <= x || c <= x || a <= y || b <= y || c <= y)
        std::cout << "Можно.\n";
    else std::cout << "Нельзя.\n";
*/
#pragma endregion

    return 0;
}
