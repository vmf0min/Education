/// Задача 3. Лифт
/// В Объединённых Арабских Эмиратах находится самый высокий небоскрёб Земли —
/// Burj Khalifa. Он оборудован скоростными пассажирскими лифтами, но вот беда:
/// иногда они дают сбой и застревают между этажами. В этом случае известно
/// число H — высота пола остановившейся кабины лифта над уровнем земли. Чтобы
/// команда лифтёров знала, куда ей ехать, шейх поручил вам написать программу,
/// которая по известному H определяет, на каком этаже находится большая часть
/// кабины. Известно, что расстояние между этажами Burj Khalifa равно 3,975 м,
/// а этаж на уровне земли имеет номер 1. На ввод программа принимает вещественное
/// число H, на экран выводит целое число — номер этажа. Не используйте при
/// решении условный оператор, кроме как для обеспечения контроля ввода.

#include <iostream>
#include <cmath>

inline void floorsCout(int floors) {
    std::cout << "Лифт застрял на " << floors << " этаже.\n";
}

int main() {
    // Ввел коррекцию к задаче:
    // Из расчета высоты в 828 метров и известных 163 этажах.
    int maxHeight{828}, maxFloors{163};
    // Высота потолков, примерно, 5.08 метров.
    float ceilingHeight = static_cast<float>(maxHeight) /
                          static_cast<float>(maxFloors);

    std::cout << "Введите высоту на которой застрял лифт: ";
    // Может быть и отрицательным числом. Полагаю есть подземная парковка.
    float h;
    std::cin >> h;

    if (h < -20 || h > static_cast<float>(maxHeight)) {
        std::cout << "Высота не может быть выше 828 метров и глубже 20 метров!\n";
        return -1;
    }

    // Для разделения на подземные и верхние этажи.
    float floorF = h / ceilingHeight;
    // Общее количество этажей.
    int floors = static_cast<int>(roundf(floorF));

    if (floorF < 0.0) {
        // Если застрял между -1 и -2 этажами.
        if (floors >= -1.0)
            --floors;
        floorsCout(floors);
    } else {
        // Если застрял между 1 и 2 этажами.
        if (floors <= 1)
            ++floors;
        floorsCout(floors);
    }

    return 0;
}
