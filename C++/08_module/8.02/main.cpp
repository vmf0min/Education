/// Задача 2. Друзья Оушена
// Банковский сейф оборудован механическим кодовым замком, состоящим из N
// крутящихся ручек, каждая из которых имеет K положений. Существует только одна
// комбинация положений всех N ручек, которая открывает сейф. Чтобы его открыть,
// достаточно перебрать все существующие комбинации. На проверку одной комбинации
// уходит в среднем T секунд, где T — вещественное число. Напишите программу,
// которая по заданным N, K и T определяет время, которое потребуется для перебора
// всех комбинаций и гарантированного открытия сейфа. Не используйте циклы.
// Обеспечьте контроль ввода.

#include <iostream>
#include <cmath>

/// Кодовый замок
class CodeLock {
 public:
  /// Конструктор по умолчанию
  CodeLock() : n_{1}, k_{1}, time_{0.01} {}

  /// Конструктор с инициализацией переменных
  /// \param n -- количество ручек;
  /// \param k -- количество положений ручки;
  /// \param time -- среднее время.
  CodeLock(int n, int k, float time) : n_{n}, k_{k}, time_{time} {}

  /// Метод расчета общего времени.
  /// n^k - количество размещений с повторениями.
  /// \return Общее время.
  float computeTime() const {
    return std::pow(static_cast<float>(k_), static_cast<float>(n_)) * time_;
  }

  /// Метод вывода на экран.
  inline void printCodeLock() const {
    std::cout << "На переборку всех комбинаций " << n_ << " ручек с " << k_
              << " положениями уходит " << computeTime() << " секунд.\n";
  }

  /// Деструктор.
  ~CodeLock() = default;

 private:
  int n_;
  int k_;
  float time_;
};

int main() {
  std::cout << "Введите количество крутящихся ручек, количество положений и "
               "время нахождения 1 комбинации: ";
  int n, k;
  float time;
  std::cin >> n >> k >> time;

  if (n <= 0 || k <= 0 || time <= 0)
    return -1;

  // Инициализаия кодового замка.
  CodeLock codeLock{n, k, time};
  codeLock.printCodeLock();

  return 0;
}